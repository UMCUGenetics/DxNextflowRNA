process {

    withName: FASTQC {

        ext.args       = '--quiet'

        cpus           = { 1  }
        time           = { 10.m}
    }

    withName: MULTIQC {

        ext.args       = { params.multiqc_title ? "--title \"${params.multiqc_title}\"" : "--title \"${params.analysis_id}\"" }
        ext.prefix     = { $ { params.analysis_id } }
        publishDir     = [
            [
                path: "${params.outdir}/QC",
                mode: params.publish_dir_mode,
            ]
        ]
        cpus           = { 1  }
        time           = { 10.m}
    }

    // TODO: retrieve dynamic resources collectrnaseqmetrics
    withName: PICARD_COLLECTRNASEQMETRICS {
        ext.args       = '--STRAND_SPECIFICITY NONE'
        publishDir     = [
            [
                path: "${params.outdir}/QC/Picard",
                mode: params.publish_dir_mode,
            ]
        ]
        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: PRESEQ_LCEXTRAP {
        ext.args       = {
            [
                '-verbose',
                '-bam',
                '-defects',
                '-seed 1',
                '-seg_len 10000000',
            ].join(' ').trim()
        }
        publishDir     = [
            [
                path: "${params.outdir}/QC/lcextrap",
                mode: params.publish_dir_mode,
            ]
        ]
        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: 'RSEQC_(BAMSTAT|INNERDISTANCE|INFEREXPERIMENT|JUNCTIONANNOTATION|JUNCTIONSATURATION|READDISTRIBUTION|READDUPLICATION)' {

        publishDir     = [
            [
                path: "${params.outdir}/QC/rseqc",
                mode: params.publish_dir_mode,
            ]
        ]
        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    // TODO: retrieve dynamic resources samtools
    withName: SAMTOOLS_CONVERT {

        publishDir     = [
            [
                path: "${params.outdir}/cram_files/",
                mode: params.publish_dir_mode,
                pattern: '*.cra?',
            ]
        ]
        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: SAMTOOLS_FLAGSTAT {

        publishDir     = [
            [
                path: "${params.outdir}/QC/samtools",
                mode: params.publish_dir_mode,
            ]
        ]
        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: SAMTOOLS_IDXSTATS {


        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: SAMTOOLS_INDEX {

        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: SAMTOOLS_MERGE {

        ext.args       = '--write-index'
        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }
    withName: SAMTOOLS_STATS {

        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    // TODO: retrieve dynamic resources sortmerna
    withName: SORTMERNA_INDEX {

        container      = 'https://community-cr-prod.seqera.io/docker/registry/v2/blobs/sha256/15/15b50826336c394eab2bf6d731f00729921598ffc6463278da6316e768b16b8b/data'
        ext.args       = '--index 1'

        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    // TODO: retrieve dynamic resources sortmerna
    withName: SORTMERNA_READS {

        container      = 'https://community-cr-prod.seqera.io/docker/registry/v2/blobs/sha256/15/15b50826336c394eab2bf6d731f00729921598ffc6463278da6316e768b16b8b/data'
        ext.args       = '--num_alignments 1 -v --index 0'

        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: STAR_ALIGN {

        ext.args       = {
            [
                '--readFilesCommand zcat',
                '--outSAMtype BAM SortedByCoordinate',
                '--outSAMunmapped Within KeepPairs',
                '--twopassMode Basic',
                '--outReadsUnmapped Fastx',
                '--alignSJDBoverhangMin 10',
                '--chimJunctionOverhangMin 12',
                '--chimSegmentMin 12',
                '--outWigType bedGraph',
                '--outWigStrand Unstranded',
            ].join(' ').trim()
        }

        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: SUBREAD_FEATURECOUNTS_GENE {
        ext.prefix = { "${meta.id}.gene" }
        ext.args   = {
            [
                "-g gene_id",
                "-J", // Count the number of reads supporting each exon-exon junction
                "-M", // Count multi-mapping reads
                "--extraAttributes gene_type,gene_name",
                "--largestOverlap",
                "--verbose",
            ].join(' ').trim()
        }

        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: SUBREAD_FEATURECOUNTS_EXON {
        ext.prefix = { "${meta.id}.exon" }
        ext.args   = {
            [
                "-g exon_id",
                "-J", // Count the number of reads supporting each exon-exon junction
                "-M", // Count multi-mapping reads
                "--extraAttributes gene_type,gene_name",
                "--largestOverlap",
                "--verbose",
            ].join(' ').trim()
        }

        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: TRIMGALORE {


        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}
    }

    withName: UMITOOLS_DEDUP {

        ext.args       = {
            [
                "--umi-separator=:",
                "--temp-dir \${TMPDIR}",
            ].join(' ').trim()
        }
        ext.prefix     = { "${meta.id}.dedup" }
        publishDir     = [
            [
                path: "${params.outdir}/QC/umitools_dedup",
                mode: params.publish_dir_mode,
            ]
        ]
        cpus           = { 1  }
        time           = { 10.m}
        memory         = { 5.GB}

    }
}
