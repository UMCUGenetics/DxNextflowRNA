params {
    genome_fasta = '/hpc/diaggen/projects/RNAseq_Jade/data/genome/hg38.fa'
    genome_gtf = '/hpc/diaggen/projects/RNAseq_Jade/data/genome/gencode.v43.annotation.gtf'
    genome_index = '/hpc/diaggen/projects/RNAseq_Jade/data/genome/hg38.fa.fai'
    singleEnd = 'false'
    star_index = ''
    drop_path = '/hpc/diaggen/projects/RNAseq_Jade/drop/'
    cluster_options = "--mail-user $params.email --mail-type FAIL --account=diaggen"
}

process {
    withLabel: FASTQC_0_11_8 {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { (1.ms * fastq.sum{it.size()}/fastq.count{it} / 1000) * task.attempt }
        clusterOptions = "$params.cluster_options --gres=tmpspace:10G"

        publishDir {
            path = "$params.outdir/QC/FastQC"
            mode = 'link'
        }
    }

    withLabel: MultiQC_1_10 {
        cpus = 2
        memory = { 5.GB * task.attempt }
        time = { 5.m * task.attempt }

        publishDir {
            path = "$params.outdir/QC"
            mode = 'link'
        }
    }

    withLabel: TrimGalore_0_6_5 {
        time = '24h'
        penv = 'threaded'
        cpus = 2
        memory = '6G'
        publishDir.path = "${params.outdir}/QC/TrimGalore"
        publishDir.mode = 'copy'
        publishDir.saveAs = {filename ->
                       if (filename.indexOf("_fastqc") > 0) "FastQC/$filename"
                       else if (filename.indexOf("trimming_report.txt") > 0) "logs/$filename"
                       else null }
    }

    withLabel :  STAR_2_7_3a_AlignReads  {
        time = '24h'
        penv = 'threaded'
        cpus = 4
        memory = '35G'
        publishDir.path = "${params.outdir}/STAR"
        publishDir.mode = 'copy'
        publishDir.saveAs = {filename -> if (filename.indexOf("_Log.out") > 0) "logs/$filename" 
                            else if  (filename.indexOf("_Log.final.out") > 0) "logs/$filename" 
                            else if  (filename.indexOf(".bam") > 0) "mapped/$filename" 
                            else if  (filename.indexOf("_SJ.out.tab") > 0) "SJ/$filename" 
                            else if  (filename.indexOf(".mate1") > 0) "unmapped/$filename" 
                            else if  (filename.indexOf(".mate2") > 0) "unmapped/$filename" }	 
    }

    withLabel : STAR_2_7_3a_GenomeGenerate {
        time = '24h'
        penv = 'threaded'
        cpus = 12
        memory = '150G'
        publishDir.path = "${params.outdir}/reference_resources/STAR"
        publishDir.mode = 'copy'
     }

    withLabel: DROP_1_2_4 {
        cpus = 2
        memory = { 5.GB * task.attempt }
        time = '12h'
        publishDir {
            path = "${params.outdir}/DROP"
            mode = 'copy'
        }
    }
}

report {
    enabled = true
    file = "$params.outdir/log/nextflow_report.html"
}

trace {
    enabled = true
    file = "$params.outdir/log/nextflow_trace.txt"
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt'
}

timeline {
    enabled = true
    file = "$params.outdir/log/nextflow_timeline.html"
}

profiles {

    slurm {
        process {
            executor = 'slurm'
            queue = 'cpu'
            clusterOptions = "$params.cluster_options"

            errorStrategy = 'retry'
            maxRetries = 1
        }

        singularity {
            enabled = true
            runOptions = '-B /hpc:/hpc -B $TMPDIR:$TMPDIR'
            autoMounts = true
            cacheDir = '/hpc/diaggen/software/singularity_cache'
        }

        executor {
            queueSize = 1000
            pollInterval = '1min'
            queueStatInterval = '5min'
            submitRatelimit = '10sec'
        }

       mail {
            smtp.host = 'localhost'
        }
    }

    mac {
        docker.enabled = true
        docker.runOptions = '-v /Users:/Users'
    }
}
